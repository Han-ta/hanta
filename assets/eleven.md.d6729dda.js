import{_ as e,o as r,c as a,O as t}from"./chunks/framework.3254de84.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"eleven.md","filePath":"eleven.md"}'),o={name:"eleven.md"},n=t('<h2 id="第十一课——面向对象" tabindex="-1">第十一课——面向对象 <a class="header-anchor" href="#第十一课——面向对象" aria-label="Permalink to &quot;第十一课——面向对象&quot;">​</a></h2><p>我们要开始正式进入“对象村”了。<br> Java是一种面向对象的编程语言，处处都有<mark><strong>对象</strong></mark>，所以说我们要进入“对象村”了。<br> 现在环顾四周，你会发现许多真实世界物体的例子：你的狗，你的桌子，你的电视机，你的自行车。<br> 真实世界的对象有两个特征：它们都具有状态和行为。<br> 狗有状态(名字，颜色，品种等)和行为(吠叫，取食，摇尾巴等)。<br> 自行车也具有状态(当前踏板节奏，当前速度等)和行为(改变踏板节奏，刹车等)。<br> 你的灯可能只有两种可能的状态(开和关)以及两种可能的行为(打开，关闭)，但你的收音机可能会有其他状态(开，关，当前音量，当前电台等)和行为(打开，关闭，增加音量，减小音量等)。<br> 编程里的对象在概念上与真实世界的对象相似：它们也包含<strong>状态</strong>和相关<strong>行为</strong>。<u>对象将其状态存储在实例变量中，并通过方法表示其行为。</u><br> 在现实世界中，你会经常发现很多单独的物体都是同一种物体。有成千上万的自行车，可能都是一样的品牌和型号。每辆自行车都由同一套蓝图制造，因此包含相同的部件。<br> 在面向对象的术语中，我们说你的自行车是自行车类的一个实例（对象）。<u>一个类是创建单个对象的蓝图。</u><br> 类有实例变量和方法，是图纸。根据这个类创建出来的对象也有状态和行为，对象是根据图纸创建出来的实物。</p><h3 id="小结" tabindex="-1">小结： <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结：&quot;">​</a></h3><p>①知道对象是什么。<br> ②知道类与对象的关系。</p>',4),s=[n];function _(c,i,l,d,h,b){return r(),a("div",null,s)}const u=e(o,[["render",_]]);export{m as __pageData,u as default};
